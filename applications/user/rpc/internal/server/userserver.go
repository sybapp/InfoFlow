// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"github.com/sybapp/infoflow/applications/user/rpc/internal/logic"
	"github.com/sybapp/infoflow/applications/user/rpc/internal/svc"
	"github.com/sybapp/infoflow/applications/user/rpc/pb"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) Register(ctx context.Context, in *pb.RegisterRequest) (*pb.RegisterResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserServer) Login(ctx context.Context, in *pb.LoginRequest) (*pb.LoginResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServer) FindById(ctx context.Context, in *pb.FindByIdRequest) (*pb.FindByIdResponse, error) {
	l := logic.NewFindByIdLogic(ctx, s.svcCtx)
	return l.FindById(in)
}

func (s *UserServer) FindByPhone(ctx context.Context, in *pb.FindByPhoneRequest) (*pb.FindByPhoneResponse, error) {
	l := logic.NewFindByPhoneLogic(ctx, s.svcCtx)
	return l.FindByPhone(in)
}

func (s *UserServer) FindByUsername(ctx context.Context, in *pb.FindByUsernameRequest) (*pb.FindByUsernameResponse, error) {
	l := logic.NewFindByUsernameLogic(ctx, s.svcCtx)
	return l.FindByUsername(in)
}
